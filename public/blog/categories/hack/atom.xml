<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hack, | Agocs]]></title>
  <link href="http://agocs.org/blog/categories/hack/atom.xml" rel="self"/>
  <link href="http://agocs.org/"/>
  <updated>2016-10-25T11:32:09-05:00</updated>
  <id>http://agocs.org/</id>
  <author>
    <name><![CDATA[Christopher Agocs]]></name>
    <email><![CDATA[chris@agocs.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[End Grain Cutting Board]]></title>
    <link href="http://agocs.org/blog/2016/10/25/end-grain-cutting-board/"/>
    <updated>2016-10-25T10:21:32-05:00</updated>
    <id>http://agocs.org/blog/2016/10/25/end-grain-cutting-board</id>
    <content type="html"><![CDATA[<p>I made an end-grain cutting board, and it&rsquo;s about the coolest thing. It&rsquo;s 1 &frac34;" thick and made from white maple. I&rsquo;ll take you through the steps I followed.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QzGfq7D/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QzGfq7D/0/XL/IMG_20161024_002802-XL.jpg" alt=""></a></p>

<p>I&rsquo;ve been a metal guy for years now. I love welding, I love machining, but recently I discovered that glued wood joints can be far stronger than I ever thought. We kinda needed a second cutting board, so I watched a few videos and read a few guides and decided I could probably build one. Last Wednesday I sketched out some plans, and worked out that I needed two pieces of 8/4" wood measuring at least 7 &frac12;" by 24", ideally walnut or maple or cherry.</p>

<p>I went to Owl Hardwood on Wednesday night and picked up a really nice piece of 8/4" walnut, measuring about 49" by 10". That piece was about $60 out the door (nice hardwood is surprisingly expensive!). I took it by the <a href="https://sshchicago.org">South Side Hackerspace</a> on Friday, cleaned up the edges, and cut them into two inch strips, and got them glued together.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QBC2KkV/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QBC2KkV/0/XL/IMG_20161023_172226-XL.jpg" alt=""></a></p>

<p>Of note, the table saw sled I used was not perfectly square. I wound up having to flip some of the strips around so that the resulting workpiece was more or less square. I&rsquo;ll probably have to build a new table saw sled one of these days.</p>

<p>Wary of the out-of-square sled, I cleaned up the edges on the sliding compound miter saw. I was able to work quickly and keep burning to a minimum.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-5RxGPZ8/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-5RxGPZ8/0/XL/IMG_20161023_172532-XL.jpg" alt=""></a></p>

<p>I made a jig out of a precision scrap of pine 2x6, and set that at 2".</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QWvP3kS/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QWvP3kS/0/XL/IMG_20161023_173120-XL.jpg" alt=""></a></p>

<p>Then I cut my workpiece crossgrain into 2" strips&hellip;</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-2M6mLm9/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-2M6mLm9/0/XL/IMG_20161023_173758-XL.jpg" alt=""></a></p>

<p>and I set the strips on their sides, like so.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-FMCgh7G/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-FMCgh7G/0/XL/IMG_20161023_174011-XL.jpg" alt=""></a></p>

<p>The strips had a little bit of tearout on the sides that was preventing them from joining up nicely with one another, so I put the smallest chamfer on the corners with a Stanley #27 block plane.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-h2FrHMV/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-h2FrHMV/0/XL/IMG_20161023_174916-XL.jpg" alt=""></a></p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-VLnv7Fg/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-VLnv7Fg/0/XL/IMG_20161023_175002-XL.jpg" alt=""></a></p>

<p>When all was said and done, it looked like this:</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-RXZ87WC/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-RXZ87WC/0/XL/IMG_20161023_180211-XL.jpg" alt=""></a></p>

<p>I arranged the pieces in the clamps and flipped every other piece around to get a nice checkerboard pattern.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-4nDdcQK/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-4nDdcQK/0/XL/IMG_20161023_181206-XL.jpg" alt=""></a></p>

<p>I reused the precision pine jig to make a custom pine glue spreader, like so:</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QDHXrvJ/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QDHXrvJ/0/XL/IMG_20161023_181427-XL.jpg" alt=""></a></p>

<p>Then I applied glue&hellip;</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-s9VWFDn/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-s9VWFDn/0/XL/IMG_20161023_181628-XL.jpg" alt=""></a></p>

<p>and gave it the squeeze.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-ZrdW8rM/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-ZrdW8rM/0/XL/IMG_20161023_190815-XL.jpg" alt=""></a></p>

<p>After letting it sit about an hour, the glue was hard enough to work with. I squared up the miter sled on the table saw and cleaned up the edges.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-rQWb27B/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-rQWb27B/0/XL/IMG_20161023_195845-XL.jpg" alt=""></a></p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-3zNBLfr/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-3zNBLfr/0/XL/IMG_20161023_200454-XL.jpg" alt=""></a></p>

<p>I then planed the workpiece down. The planer was really disliking cutting the end grain like that, so I wound up having to go super slow, turning the height adjustment no more than 1/8th turn at a time (probably taking off somewhere between 1/64" and 1/32" at a time). The planer really beat the trailing edge to heck, so I cleaned that up on the table saw as well.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QN7SbvK/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QN7SbvK/0/XL/IMG_20161023_201829-XL.jpg" alt=""></a></p>

<p>I put a &frac14;" roundover on the corners with a router, then started sanding. Two problems exposed themselves here: First, I really should have bought new sandpaper (maybe starting with 80 grit, then moving up to 200 and finally 400 grit) rather than just using the 200 grit that I found. The planer&rsquo;s blade needs replacing, and it left some deep scratches in the surface that sanding was able to minimize, but you can still see them. Second, sanding on the table saw like that caused me to pick up some of the 3 in 1 oil I used to oil the table. Whoops!</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QrnDZbQ/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QrnDZbQ/0/XL/IMG_20161023_203522-XL.jpg" alt=""></a></p>

<p>Finally the workpiece was sanded and ready to take home.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-KkrcBLV/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-KkrcBLV/0/XL/IMG_20161023_204529-XL.jpg" alt=""></a></p>

<p>I bought a couple bottles of butcher block oil (just food grade mineral oil) and a thing of butcher block wax (just food grade mineral oil and bee&rsquo;s wax) from the Home Depot. At this point my friend <a href="http://hey-er.in/">Erin</a> will be yelling &ldquo;No you idiot it&rsquo;s so much cheaper to buy that oil in bulk! I told you I had some!&rdquo; But it was late, and I was impatient, so I was willing to spend a few extra bucks to get it done.</p>

<p>Once home, I soaked both sides in oil. I poured a bunch on, spread it around with a paper towel, and waited 15 minutes. I did this three times per side with the oil, then once per side with the wax. The oil brought out the wood&rsquo;s pattern, and it looks amazing.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-jxnQCXZ/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-jxnQCXZ/0/XL/IMG_20161023_221628-XL.jpg" alt=""></a></p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-F2tsMVB/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-F2tsMVB/0/XL/IMG_20161023_221646-XL.jpg" alt=""></a></p>

<p>My wife helped me pick which side was the bottom, and I installed some anti-skid rubber feet. I might replace the screws with stainless hardware down the road, but this will work for now. Deciding to install feet on one side is a trade-off; I could leave both sides open and make the cutting board reversible, but having feet on the bottom makes it slip around less and also lets air flow on the underside to help it dry off. As an aside, installing the feet was my first chance to use my new Makita drill and driver, so I was excited!</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-W8nr69t/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-W8nr69t/0/XL/IMG_20161024_002604-XL.jpg" alt=""></a></p>

<p>I flipped it back over and let it sit overnight. The oil oxidizes and forms a semi-hard sealing layer. I re-coated the board the next morning, and again later the next day. I got to use it last night to chop some star fruit, and I can&rsquo;t tell you how exciting it is to have made something this beautiful and functional with my hands.</p>

<p><a href="https://agocs.smugmug.com/Other/Cutting-board/i-QzGfq7D/A"><img src="https://photos.smugmug.com/Other/Cutting-board/i-QzGfq7D/0/XL/IMG_20161024_002802-XL.jpg" alt=""></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing Uluru]]></title>
    <link href="http://agocs.org/blog/2015/08/20/introducing-uluru/"/>
    <updated>2015-08-20T15:46:16-05:00</updated>
    <id>http://agocs.org/blog/2015/08/20/introducing-uluru</id>
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/commons/3/3e/Uluru_Panorama.jpg" /></p>

<p>I don&rsquo;t work for <a href="https://www.backstopsolutions.com/careers">Backstop</a> any more (but you should), but back when I did, we discovered we had no idea how long it took our users to load our tools. Hell, we couldn&rsquo;t even figure out how many clicks per month we had! I was working with New Relic trying to get a quote from them, and the best I could do was 2 million plus or minus 800 thousand. We had insight into how long it took our servers to respond to requests, but no thought was given to DNS, loading outside resources, rendering DOM, etc.</p>

<p>We tried New Relic Browser, but that failed for two reasons. First, something in the few-hundred-kilobytes of minified JavaScript was conflicting with something in our JavaScript in a way that broke automated testing. Second, on a sales call, we determined that Browser really wasn&rsquo;t going to tell us the information we wanted to know. It&rsquo;s a good tool, for sure, but it didn&rsquo;t expose the depth of data we wanted.</p>

<p><a href="https://twitter.com/alarmingcow">Colin</a> found a tool called <a href="https://github.com/yahoo/boomerang">Yahoo Boomerang</a> which seemed to do what we needed. It would collect metrics on how long it took the page, and various resources on the page, to load, and it would report those data back to a server over here. Simple, right?</p>

<p>I took two issues with Boomerang. First, it again broke our testing. Second, it used some ridiculous scheme of a GET request with URL parameters inside of an invisible iframe to get data back to the server without any cross-site request issues. This seemed entirely too complicated, and simplicity was one of my overarching goals. I decided to roll my own.</p>

<p>I was sitting in the audience at <a href="http://monitorama.com/">Monitorama</a>, and one of the speakers mentioned logging how long clients spent loading pages. I asked him about it, and he mentioned something in Vanilla JavaScript that allowed for that. I did some research, found out about <code>window.performance.Timing</code>, and thus Uluru was born.</p>

<p>The name, incidentally, came from back when I was experimenting with Boomerang. I needed a server to throw Boomerang data at, so I picked the famous Australian sandstone formation Uluru.</p>

<h2>Design goals</h2>

<p>There exist other solutions, commercial and open source, for recording and reporting on browser telemetry. It was found, however, that these solutions were significantly complex, and in many cases interfered with JavaScript we were already using, causing JavaScript errors and preventing the browser from rendering UI elements. Therefore, the design goals of Uluru became:</p>

<ul>
<li>Minimalism: Uluru.js is 47 lines of whitespace-heavy JavaScript. It should be extremely readable.</li>
<li>Light weight: When minified, Uluru.js squishes down under 500 bytes.</li>
<li>Speed: Uluru.js has no dependencies on other JS libraries.</li>
<li>No hacks: Uluru.js makes a single POST request to a remote server. It does not e.g. cram metrics into query parameters and make a series of requests GETting hidden images or iframes.</li>
</ul>


<h2>Implementation</h2>

<h3>Client side</h3>

<p>Uluru is a function that, when called, gets the time since navigation started and some other metrics, and sends those to an endpoint. We&rsquo;ve set it up such that <code>uluru(endpoint)</code> is called when <code>window.onload</code> fires, under the assumption that most of our product is useful by that point.</p>

<p>Uluru collects the following data:</p>

<ul>
<li>url: the <code>window.location.href</code></li>
<li>connectionTime: the time (ms since UNIX epoch) the connection was initiated.</li>
<li>connectionDelta: the time spent establishing a connection to the server</li>
<li>firstByte: the time spent waiting for the server to respond with the first byte of data</li>
<li>responseDelta: the time the server spent sending a response to the client</li>
<li>loadTime: time between the <code>navigationStart</code> and <code>window.onload</code> events.</li>
</ul>


<p>It also calls <code>window.performance.getEntries()</code> to provide specific timing on every resource (script, image, stylesheet, etc.) included in the page load.</p>

<h3>Server side</h3>

<p>Uluru rolls all the data it collects up into one PUT request. The easiest way to collect Uluru data is to include a data collection REST endpoint in your existent web application (or, if you&rsquo;re feeling clever, make your web proxy route Uluru requests to a specific Uluru logging server.</p>

<p>Alternatively, you could set the <code>Access-Control-Allow-Origin</code> header to allow the browser to make POST requests to a separate server you&rsquo;ve spun up for this purpose.</p>

<p>Either way, what we&rsquo;ve wound up doing is writing the Uluru data out to Splunk, and aggregating it there in interesting ways.</p>

<h2>Data</h2>

<p>Here&rsquo;s some of the data we were able to collect!</p>

<h3>Page loads and Appdexes</h3>

<p><a href="https://agocs.smugmug.com/Other/Misc/i-6PnMZv4/A"><img src="https://agocs.smugmug.com/Other/Misc/i-6PnMZv4/0/M/Screen%20Shot%202015-09-04%20at%201.57.31%20PM-M.png" alt="Photo &amp; Video Sharing by SmugMug"></a></p>

<p>One neat thing we didn&rsquo;t have before is an easy way to count how many page loads our system saw, how many unique users we had actively using our system, or how many clients were logged in on a given day. When you start making changes to system performance, you start thinking about things differently when you consider the 1ms wait you just removed will be multiplied by 73,000 over the course of a day.</p>

<p>Appdex is an interesting measure of system speed. You select a goal speed (2 seconds on the left, 4 seconds on the right), and you count page loads. Every page load that took under the goal speed counts for 1. Every load that took greater than the goal speed but under twice the goal speed counts for .5, and the rest count for 0. You divide the counted page loads by the total page loads, and you get a number between 0 and 1 that gives you a decent metric for how happy or sad your users are.</p>

<p>One really interesting thing we saw from this, we found by looking at individual clients. One of our clients had a significantly lower Appdex than the rest. We did some digging, and found that a condition in their data made every JSP load a huge number of records from the database to generate a list they never used. We disabled that for them, and they got much happier without ever realizing they were sad!</p>

<h3>Speed breakdown</h3>

<p><a href="https://agocs.smugmug.com/Other/Misc/i-trpgpLZ/A"><img src="https://agocs.smugmug.com/Other/Misc/i-trpgpLZ/0/M/Screen%20Shot%202015-09-04%20at%201.58.09%20PM-M.png" alt="Photo &amp; Video Sharing by SmugMug"></a></p>

<p>This is a bit more boring, but it lets us know how many page loads are fast, acceptable, slow, or super slow. Comparing, e.g., last hour with last 7 days lets us see any system wide problems before our clients call in.</p>

<h3>Page load histograms</h3>

<p><a href="https://agocs.smugmug.com/Other/Misc/i-sh6FZWC/A"><img src="https://agocs.smugmug.com/Other/Misc/i-sh6FZWC/0/M/Screen%20Shot%202015-09-04%20at%201.59.35%20PM-M.png" alt="Photo &amp; Video Sharing by SmugMug"></a></p>

<p>These let us know at a glance how our page loads are distributed. We could, for example, notice a bi-modal distribution. It wouldn&rsquo;t affect our average or median scores, but it would be indicative of something fishy.</p>

<p>I once noticed a particular user sending back negative page load speeds. I investigated it for a little bit and decided it was just one of those weird things that happen when you rely on multiple sources of time.</p>

<h3>Slow pages</h3>

<p><a href="https://agocs.smugmug.com/Other/Misc/i-X5dKdQs/A"><img src="https://agocs.smugmug.com/Other/Misc/i-X5dKdQs/0/M/Screen%20Shot%202015-09-04%20at%201.59.45%20PM-M.png" alt="Photo &amp; Video Sharing by SmugMug"></a></p>

<p>This report gives us some neat insight into what&rsquo;s been taking a long time to load. You look at each one, make sure it makes sense, and then use this graph to help prioritize your projects.</p>

<h3>Time sinks</h3>

<p><a href="https://agocs.smugmug.com/Other/Misc/i-RJRsk3M/A"><img src="https://agocs.smugmug.com/Other/Misc/i-RJRsk3M/0/M/Screen%20Shot%202015-09-04%20at%201.59.53%20PM-M.png" alt="Photo &amp; Video Sharing by SmugMug"></a></p>

<p>Likewise, just counting the total amount of time sunk into a resource is helpful. You might (much like we do) have a page that clients hit all the time. It might load in under two seconds, but if you can shave 10 % off of that, you&rsquo;re saving 20 hours per week aggregated across all of your users.</p>

<p>You can get a lot of really interesting data from visualizations like this. Use these to help justify speed projects.</p>

<h2>Further directions</h2>

<p>Currently, the Uluru project includes some stub code for a generic REST endpoint. I want to flush this out into something that writes logs for splunkd or logstash, or forwards data to services like Sensu or Riemann.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AGOX Connectors]]></title>
    <link href="http://agocs.org/blog/2014/09/19/agox-connectors/"/>
    <updated>2014-09-19T10:23:41-05:00</updated>
    <id>http://agocs.org/blog/2014/09/19/agox-connectors</id>
    <content type="html"><![CDATA[<h3>Or, how we hacked reality</h3>

<p>This is an eight-pin AGOX connector:</p>

<p><img src="http://i.imgur.com/NHrH5hOl.jpg"></p>

<p>In September of 2008, I was a student at the <a href="http://www.gatech.edu">North Avenue Trade School</a> and heavily involved in the <a href="http://www.wrek.org">WREK</a> radio station. One of my good friends at the time was <a href="http://centrisian.com/">Robert Wright</a>. My &ldquo;initials&rdquo; (how we logged in, signed up for shifts, etc.) at the radio station were &ldquo;AGOX&rdquo;, and I signed all my emails that way. One afternoon, Robert pointed me toward the Wikipedia Talk page for USB: specifically at a section called <a href="http://en.wikipedia.org/wiki/Talk:USB/Archive_4#Mystery_micro_plug">Mystery Micro Plug</a>. At the bottom, he wrote:</p>

<blockquote><p>Based on personal knowledge, and having worked in the field for a few years, the &lsquo;Mystery Plug&rsquo; is internally named the &lsquo;Agox connector&rsquo; when used in combination with digital cameras. We refer to them this way because of the gentleman with whom I worked. 128.61.120.190 (talk) 22:49, 23 September 2008 (UTC)</p></blockquote>

<p>I thought it was funny, so I replied.</p>

<blockquote><p>I think I remember seeing it called the &lsquo;Agox Connector&rsquo; in Nikon documentation somewhere. I always wondered why. 128.61.69.123 (talk) 22:56, 23 September 2008 (UTC)</p></blockquote>

<p>It would have died at this point if another Wikipedia editor hadn&rsquo;t gotten involved.</p>

<blockquote><p>Hmmm&hellip; very interesting. Do you have a reference for it anywhere??? ǝɹʎℲxoɯ (contrib) 06:33, 24 September 2008 (UTC)</p></blockquote>

<p>Well&hellip; One good lie begets another. Rob said:</p>

<blockquote><p>I&rsquo;m no longer working there, but I could possibly try to get some documents from people who still work there. 128.61.120.190 (talk) 09:32, 24 September 2008 (UTC)</p></blockquote>

<p>And then, a few days later, he said:</p>

<blockquote><p>So, after having asked around, I&rsquo;ve learned that the connector&rsquo;s internal name of &lsquo;Agox&rsquo; is on some documentation that we haven&rsquo;t released to the public yet. The name is perfectly fine to use for the article, but the Nikon documents cannot be released. If I could cite them here, I would, but alas, I am still bound not to release the information behind this. 24.98.65.137 (talk) 04:48, 30 September 2008 (UTC)</p></blockquote>

<p>Finally, about a month later, I came up with the most ridiculous thing I could imagine.</p>

<blockquote><p>It stands for Asynchronous Gamma-Object Transfer (x=trans). In Nikon&rsquo;s logical model, the alpha object acts as a server, the beta object acts as a client, and data that flows between the two are considered gamma objects. There are delta and epsilon objects as well, but those are too small to get into. 128.61.69.123 (talk) 23:27, 21 October 2008 (UTC)</p></blockquote>

<p>We left it at that. A few months later, Rob pointed me back at the main USB article. I scrolled through and saw this:</p>

<p><img src="http://i.imgur.com/usgXmpCl.png"></p>

<p>We&rsquo;d done it! Someone took our lies and made them reality! It didn&rsquo;t stop there. You could find Chinese companies selling AGOX cables and AGOX connectors, people mentioned AGOX connectors on forums, one guy even wrote a blog post about an AGOX to regular USB converter he made.</p>

<p>All good things must come to an end, and, rightly so, AGOX Connector got edited away. Wikipedia currently calls it a &ldquo;UC-E6 proprietary (non-USB) plug&rdquo;, but, in my heart of hearts, I know what it really is.</p>
]]></content>
  </entry>
  
</feed>
